name: "AI Code Review"
description: "LangChain-based code review bot using OpenAI"
inputs:
  openai_api_key:
    description: "OpenAI API Key"
    required: true
  token_github:
    description: "GitHub Token for posting comments"
    required: true
    
outputs: {}

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install langchain langchain-community openai

    - name: Detect changed files
      id: detect
      shell: bash
      run: |
        files=$(git diff --name-only HEAD^ HEAD \
          | grep -E '\.(py|js|ts|json|txt)$' \
          | grep -vE '^\.github/|^actions/ai_code_review/' \
          | paste -sd "," -)
        echo "CHANGED_FILES=$files" >> $GITHUB_ENV
        echo "Detected changed files: $files"

    - name: Run AI Code Review
      shell: bash
      env:
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
      run: |
        if [ -z "$CHANGED_FILES" ]; then
          echo "No relevant files changed. Skipping review." > review_output.txt
        else
          python ai_code_review.py > review_output.txt
        fi

    - name: Save review output
      shell: bash
      run: cat review_output.txt

    - name: Post Review Comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.token_github }}
        script: |
          const fs = require('fs');
          const review = fs.readFileSync('review_output.txt', 'utf8');
          if (review.trim()) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ðŸ¤– Advanced AI Code Review Bot\n\n${review}`
            });
          }